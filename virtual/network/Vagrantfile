# -*- mode: ruby -*-
# vi: set ft=ruby :

# Copyright:: 2019 Bloomberg Finance L.P.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

def provision_apt_cache(config)
  user_data_path = Vagrant.user_data_path.to_s
  cache_dir = File.join(user_data_path, 'cache', 'apt', config.vm.box)
  apt_cache_dir = '/var/cache/apt/archives'
  config.vm.synced_folder cache_dir, apt_cache_dir,
                                     create: true,
                                     type: 'sshfs',
                                     sshfs_opts_append: '-o cache=no,nonempty'
end

def setup_proxy(node)
  http_proxy  = ENV['http_proxy']  || ''
  https_proxy = ENV['https_proxy'] || ''
  return if http_proxy == ''
  node.vm.provision 'shell', path: 'proxyconfig.sh',
                             args: [http_proxy, https_proxy]
end

Vagrant.configure(2) do |config|
  config.vm.box = 'generic/ubuntu1804'
  config.vm.box_download_insecure = true
  provision_apt_cache(config)

  config.vm.provider :libvirt do |lv|
    if ENV['LIBVIRT_QEMU'] == 'true'
      lv.driver = 'qemu'
      lv.cpu_mode = 'custom'
      config.vm.synced_folder './', '/vagrant'
    else
      lv.driver = 'kvm'
      lv.nested = true
      lv.cpu_mode = 'host-passthrough'
      config.vm.synced_folder './', '/vagrant', type: '9p'
    end
    lv.cpus = 1
    lv.memory = 512
  end

  config.vm.define 'network' do |node|
    node.vm.hostname = 'network'
    node.vm.network 'private_network',
                    ip: '10.121.84.1',
                    libvirt__netmask: '255.255.255.240',
                    libvirt__network_name: 'management1',
                    libvirt__dhcp_enabled: false,
                    libvirt__forward_mode: 'none'
    node.vm.network 'private_network',
                    ip: '10.121.85.1',
                    libvirt__netmask: '255.255.255.240',
                    libvirt__network_name: 'management2',
                    libvirt__dhcp_enabled: false,
                    libvirt__forward_mode: 'none'
    node.vm.network 'private_network',
                    ip: '10.121.86.1',
                    libvirt__netmask: '255.255.255.240',
                    libvirt__network_name: 'management3',
                    libvirt__dhcp_enabled: false,
                    libvirt__forward_mode: 'none'
    if ENV['LIBVIRT_QEMU'] != 'true'
      setup_proxy(node)
      node.vm.provision 'shell', path: 'provisioner.sh', args: 'network'
    end
  end
end
